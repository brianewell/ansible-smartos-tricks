---
- name: ensure that OpenJDK{{ neo4j.openjdk }} is present
  pkgin:
    name: openjdk{{ neo4j.openjdk }}

- name: ensure presence of {{ neo4j.group }} group
  group:
    gid: 814
    name: '{{ neo4j.group }}'

- name: ensure presence of {{ neo4j.user }} user
  user:
    uid: 814
    name: '{{ neo4j.user }}'
    group: '{{ neo4j.group }}'
    home: /nonexistent
    create_home: false
    shell: /usr/bin/false
    comment: Neo4j daemon user

- name: ensure precence of {{ neo4j.project }} project
  command: projadd -U {{ neo4j.user }} -G {{ neo4j.group }} -c "Neo4j server" -K "process.max-file-descriptor=(basic,65536,deny)" {{ neo4j.project }}
  ignore_errors: true

- name: ensure presence of neo4j ZFS filesystem at {{ neo4j.data_path }}
  when: delegate_dataset is succeeded
  zfs:
    name: '{{ zone_dataset }}/neo4j'
    state: present
    extra_zfs_properties:
      mountpoint: '{{ neo4j.data_path }}'
      recordsize: '{{ neo4j.recordsize }}'

- name: ensure that root owned Neo4j directories exist and have the proper permissions
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
  - '{{ neo4j.path }}'
  - '{{ neo4j.conf_path }}'

- name: ensure that Neo4j {{ neo4j.version }} has been downloaded
  get_url:
    url: 'https://neo4j.com/artifact.php?name=neo4j-community-{{ neo4j.version }}-unix.tar.gz'
    dest: '/tmp/neo4j-community-{{ neo4j.version }}-unix.tar.gz'
    checksum: '{{ neo4j_checksum[neo4j.version] }}'
    timeout: 30

- name: ensure that Neo4j {{ neo4j.version }} has been installed
  unarchive:
    src: '/tmp/neo4j-community-{{ neo4j.version }}-unix.tar.gz'
    dest: '{{ neo4j.path }}'
    owner: root
    group: root
    mode: 0755
    remote_src: true
    extra_opts:
    - '--strip-components=1'

- name: ensure that unnecessary files are absent
  file:
    path: '{{ neo4j.path }}/{{ item }}'
    state: absent
  with_items:
  - LICENSE.txt
  - LICENSES.txt
  - NOTICE.txt
  - README.txt
  - UPGRADE.txt
  - data
  - conf

- name: ensure presence of required symlinks
  file:
    src:   '{{ item.src }}'
    path:  '{{ item.path }}'
    state: link
    force: true
  with_items:
  - src:  '{{ neo4j.conf_path }}'
    path: '{{ neo4j.path }}/conf'
  - src:  '{{ neo4j.data_path }}'
    path: '{{ neo4j.path }}/data'

- name: ensure that neo4j owned directories exist and have the proper permissions
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ neo4j.user }}'
    group: '{{ neo4j.group }}'
    mode: 0700
  with_items:
  - '{{ neo4j.data_path }}'
  - '{{ neo4j.path }}/certificates'
  - '{{ neo4j.path }}/logs'
  - '{{ neo4j.path }}/run'

- name: ensure that Neo4j has been properly configured
  template:
    src: neo4j.conf
    dest: /opt/local/etc/neo4j/neo4j.conf
    owner: root
    group: root
    mode: 0644
  notify: restart neo4j

- name: ensure presence of Neo4j SMF manifest
  template:
    src: neo4j-smf.xml
    dest: /tmp/neo4j-smf.xml
    owner: root
    group: root
    mode: 0644

- name: ensure that Neo4j SMF manifest has been imported
  command: svccfg import /tmp/neo4j-smf.xml

- name: ensure that Neo4j is enabled
  register: neo4j_enabled
  service:
    name: 'svc:/neo4j:default'
    enabled: true
