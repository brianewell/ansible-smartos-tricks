---
- name: ensure presence of mysql ZFS dataset
  when: delegated_dataset is succeeded
  zfs:
    name: '{{ ansible_mounts.0.device }}/data/mysql'
    state: present
    extra_zfs_properties:
      mountpoint: /var/mysql
      recordsize: '{{ mysql.recordsize }}'

- name: ensure presence of {{ mysql.fork }}-server and pymysql (for ansible configuration of {{ mysql.fork }})
  pkgin:
    name:
    - '{{ mysql.fork }}-server'
    - py27-pymysql
  notify: restart {{ mysql.fork }}-server

- name: ensure secure permissions on mysql ZFS mountpoint
  file:
    path: /var/mysql
    state: directory
    owner: mysql
    group: root
    mode: 0700

- name: ensure that {{ mysql.fork }}-server is enabled
  service:
    name: 'svc:/pkgsrc/{{ mysql.fork }}:default'
    enabled: true

- name: ensure absence of {{ mysql.fork }} test database
  mysql_db:
    name: test
    state: absent

- name: ensure absence of anonymous {{ mysql.fork }} users
  mysql_user:
    name: ''
    host_all: true
    state: absent

- name: ensure absence of FQDN host root user
  mysql_user:
    name: root
    host: '{{ ansible_hostname }}'
    state: absent

- name: generate a randomized password for the {{ mysql.fork }} root user
  set_fact:
    mysql_root_password: "{{ lookup( 'password', '/dev/null' ) }}"

- name: ensure that {{ mysql.fork }} root password is set to the previously generated password
  mysql_user:
    check_implicit_admin: true
    name: root
    host_all: true
    password: '{{ mysql_root_password }}'

- name: ensure that .my.cnf exists with root credentials
  template:
    src: my.cnf
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0644
