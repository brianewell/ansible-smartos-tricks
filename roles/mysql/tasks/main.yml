---
- name: ensure presence of mysql ZFS filesystem
  when: delegate_dataset is succeeded
  zfs:
    name: '{{ zone_dataset }}/mysql'
    state: present
    extra_zfs_properties:
      mountpoint: '{{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.datadir }}'
      recordsize: '{{ (default_mysql|combine(mysql, recursive=True)).recordsize }}'

- name: ensure presence of {{ (default_mysql|combine(mysql, recursive=True)).server }}-server and pymysql (for ansible configuration of {{ (default_mysql|combine(mysql, recursive=True)).server }})
  notify: restart mysql-server
  pkgin:
    name:
    - '{{ (default_mysql|combine(mysql, recursive=True)).server }}-server'
    - py37-pymysql

- name: determine if {{ (default_mysql|combine(mysql, recursive=True)).server }}-server database cluster has been properly initialized
  register: mysql_cluster
  command: ls {{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.datadir }}

- name: ensure that {{ (default_mysql|combine(mysql, recursive=True)).server }}-server database cluster has been properly initialized
  when: mysql_cluster.stdout == ""
  command: /opt/local/bin/mysql_install_db --user={{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.user }} --group={{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.user }} --basedir={{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.basedir }} --datadir={{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.datadir }}

- name: ensure secure permissions on mysql ZFS mountpoint
  file:
    path: '{{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.datadir }}'
    state: directory
    owner: '{{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.user }}'
    group: '{{ (default_mysql|combine(mysql, recursive=True)).config.mysqld.group }}'
    mode: 0750

# Configuring MySQL is apparently off the table
# - name: ensure that {{ (default_mysql|combine(mysql, recursive=True)).server }}-server is properly configured
#   notify: restart mysql-server
#   template:
#     src: system-my.cnf
#     dest: /opt/local/etc/my.cnf
#     owner: root
#     group: root
#     mode: 0644

- name: ensure that {{ (default_mysql|combine(mysql, recursive=True)).server }}-server is enabled
  register: mysql_enabled
  service:
    name: 'svc:/pkgsrc/{{ (default_mysql|combine(mysql, recursive=True)).server }}:default'
    enabled: true

# Yet another reason to hate Ansible
# - name: generate a randomized password for the database root user
#   set_fact:
#     mysql_root_password: "{{ lookup( 'password', '/dev/null' ) }}"
# 
# - name: ensure that database root password is set to the previously generated password
#   mysql_user:
#     check_implicit_admin: true
#     name: root
#     host_all: true
#     password: '{{ mysql_root_password }}'
# 
# - name: ensure that .my.cnf exists with root credentials
#   template:
#     src: my.cnf
#     dest: /root/.my.cnf
#     owner: root
#     group: root
#     mode: 0640
