<?xml version='1.0'?>
<!DOCTYPE service_bundle SYSTEM '/usr/share/lib/xml/dtd/service_bundle.dtd.1'>
<service_bundle type='manifest' name='export'>
  <service name='ghost' type='service' version='0'>
    <create_default_instance enabled='false'/>
    <single_instance/>
    <dependency name='network' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/milestone/network:default'/>
    </dependency>
    <dependency name='filesystem' grouping='require_all' restart_on='error' type='service'>
      <service_fmri value='svc:/system/filesystem/local'/>
    </dependency>
    <method_context project='{{ ghost.project }}' working_directory='{{ ghost.path }}'>
      <method_credential group='{{ ghost.group }}' user='{{ ghost.user }}'/>
      <method_environment>
        <envvar name='PATH' value='/opt/local/sbin:/opt/local/bin:/usr/sbin:/usr/bin'/>
        <envvar name='NODE_ENV' value='{{ ghost.env }}'/>
      </method_environment>
    </method_context>
    <exec_method name='start' type='method' exec='/opt/local/bin/ghost run' timeout_seconds='60'/>
    <exec_method name='stop' type='method' exec=':kill' timeout_seconds='60'/>
    <property_group name='startd' type='framework'>
      <propval name='duration' type='astring' value='child'/>
      <propval name='ignore_error' type='astring' value='core,signal'/>
    </property_group>
    <property_group name='application' type='application'/>
    <stability value='Evolving'/>
    <template>
      <common_name>
        <loctext xml:lang='C'>Ghost blogging server</loctext>
      </common_name>
    </template>
  </service>
</service_bundle>
